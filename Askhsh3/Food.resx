<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAP41AAD+NQAAAAAAAAAA
        AAAACBoAAAAAADw3NAIoKSwAOzYzATo2MwE6NjMAOjYzAAAAAAA6NjMAPzs4AColIgA2Mi8DWVZTBAAA
        AAD///8AwL++AAAAAAAAAAAA/Pz7AElFQABKRkEAa2hhAj87OAQvKigAMCwqADo2MwA6NjMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAkIf8AAADKAAAAFhYAADoJAAA5AAAANwA5NTMAOjYzADIuKwAzLisBSERBAyIj
        JAEAAAAAAAAADwkFBEMnIx9vODQxiDs3NIwyLit7GxYWVgAAACEAAAAAUlxRAEtHQwI8ODUCPjo2ADw4
        NQA6NjMAAAAAAAAAAAAAAAAASEA4Azs7OwA3Nzdte15C/1tFMckAEDcPABY1ADo2MwE7NzQAOTUyATMv
        LAMAAAAAAAAAKjQwLZ5xbmvtoJ6d/8C/vv7R0ND/vbyw/62snf+amIz/d3Vs+0lFQcQVERFUAAAAAv//
        9wE2MjADSUVBAEdEQAA6NjMAAAAAAAAAAAD///8B////AF9USM/wqmL/nmEq/xMmN0wNITUAOzYzAyYj
        IQL///8BAAAABSomI4eHhYP75eTk///////+/v79////+/////vw8OD77e7Y+/Lz3fzx8dz/2dnH/pmY
        i/9JRkHEAAAAJwAAAAAuKigDQDw5AD05NgA6NjMAAAAAAP///wD///8Abl5L0baIV/+TWyn/JS84UBso
        NAAxLSkFAAAAAAAAABBLR0S/vLq5/+Hf3/y1s7H7lpOS/ouJh/+HhYP/hoSD/3x6cv95d27/e3lw/4B+
        dP6RjoL8tbOi+7y7qv9raGHzEAsMSAcCBAA2Mi8DQDw5ADo2MwA6NjIA////AP///wBiV0rS/7po/6pn
        Kv8SJTdQCyE2AM/NywMAAAAKTUpHxbi2tf+HhYP6c3h3/pCamv+irq7/qre5/7DAw/+zxMj/tsfL/7TF
        yf+vvsH/qLS2/5ymqP+Bh4j/bGxo+5+dj/9xbmb6DQgKQwAAAAAvKikDODQxADo2MwD///8A////AGNY
        StP/t2f/qGYq/xMlN1EAFSwAXFlXADUxLp69u7r/enl3+qaztP/c7vH/1+jr/9nr7//W5+n/wcfC/7Gz
        rP+usKj/uby2/87b2v/a7fH/1ufp/9rs7v/M3eD/bXFx/Kaklf9kYlvnAAAAHQAAAAAuKSgBOjYzAP//
        /wD///8AY1hK0/+3Z/+pZir/FCY3UwUOFwAGAQBQoJ6d/7+8u/yCior/4PL1/8jX2f/Y5+r/xc7N/2Rp
        af8uWnr/G1+T/xlgl/8kXIf/SVpl/6KloP/d7O7/y9rb/9Xm5/+4x8r/eXhv+7++rv83MzClRUE9AGVj
        WwJEQT0A////AP///wBjWErT/7dn/6hmKv8WKTtRUWJzAE1JRsf4+Pj/n52b/Ku0tP/n9Pb/4u7w/+30
        8/9dZ27/AG7H/wGX//8Al/7/AJf+/wGX//8Aivb/Ik9w/8nJxP/t+v3/3urr/9rn6f9ycm7/4eHN/n99
        c/8DAAA1AAAAADczMQP///8A////AGNYStP/t2f/p2Yq/xguREUAAAApj42L//////6dm5n/rrS0//T/
        ///u+/7/z8nE/yVmiv8mx///AYz6/wKT/P8BlPz/Ao/7/wKY//8Acsj/jIuJ//j////o8vP/4+zu/3Rz
        bv/g4Mv7ubip/zg0MZQ6NjMAT0xHBP///wD///8AY1hK0/+3Z/+nZir/DCU8PzQsJnDEw8L/////+769
        vP+Wl5b///////7////g1ND/LW2I/zvg//8Aqfr/Abr//wC7/v8Bs/v/ArD//wB7xP+Zk5D///////v/
        ///R09T/eXdu/+Xl0f3X18X/YF1W2AAAAAMAAAAA////AP///wBjWErT/7dn/6hnK/8AEylEV1FMpOTk
        4//////86efl/2lhXP/19PT//////////v9lb3D/Qs/b/yHg//8AvP7/Ar7//wLG/v8Ayv//H2J2/9zQ
        y////////////4+Mi/+hoJH/5eXR/uPjz/99enH7AAAAIgAAAAD///8A////AGNXStL/t2f/qmgr/wAL
        HU5pZGDA+fr6/+fj4f1dYmP/IkBM/5KTkv///////////9/Y1v9acXH/RbvG/z3Z9P8KuO//AJ7T/x5j
        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
        AAGkSAABgtAAAoLQAgL/9CiC/9EAi//oEyI=
</value>
  </data>
</root>